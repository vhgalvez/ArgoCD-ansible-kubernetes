# playbooks/uninstall_argocd.yml
---
- name: 🗑️ Desinstalar ArgoCD y sus recursos relacionados
  hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - ../vars/main.yml

  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"

  tasks:

    # 🌐 Ingress & Middleware
    - name: ❌ Eliminar IngressRoute del Dashboard de ArgoCD
      kubernetes.core.k8s:
        state: absent
        definition:
          apiVersion: traefik.io/v1alpha1
          kind: IngressRoute
          metadata:
            name: ingressroute-argocd-internal
            namespace: "{{ argocd_namespace }}"
      tags: [argocd, ingressroute]

    - name: ❌ Eliminar Middleware de autenticación de ArgoCD
      kubernetes.core.k8s:
        state: absent
        definition:
          apiVersion: traefik.io/v1alpha1
          kind: Middleware
          metadata:
            name: "{{ argocd_middleware_name }}"
            namespace: "{{ argocd_namespace }}"
      tags: [argocd, middleware]

    # 🔐 Autenticación
    - name: ❌ Eliminar SealedSecret de autenticación básica
      kubernetes.core.k8s:
        state: absent
        definition:
          apiVersion: bitnami.com/v1alpha1
          kind: SealedSecret
          metadata:
            name: "{{ argocd_secret_name }}"
            namespace: "{{ argocd_namespace }}"
      tags: [argocd, sealedsecret]

    - name: ❌ Eliminar Secret de autenticación sin sellar
      kubernetes.core.k8s:
        state: absent
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: "{{ argocd_secret_name }}"
            namespace: "{{ argocd_namespace }}"
      tags: [argocd, secret]

    - name: ❌ Eliminar Secret de contraseña admin de ArgoCD
      kubernetes.core.k8s:
        state: absent
        kind: Secret
        api_version: v1
        name: argocd-secret
        namespace: "{{ argocd_namespace }}"
      ignore_errors: true
      tags: [argocd, secret]

    # ⚙️ ConfigMaps (evitan que Helm instale si ya existen)
    - name: ❌ Eliminar ConfigMap argocd-cm
      kubernetes.core.k8s:
        state: absent
        kind: ConfigMap
        api_version: v1
        name: argocd-cm
        namespace: "{{ argocd_namespace }}"
      ignore_errors: true
      tags: [argocd, configmap]

    - name: ❌ Eliminar ConfigMap argocd-cmd-params-cm
      kubernetes.core.k8s:
        state: absent
        kind: ConfigMap
        api_version: v1
        name: argocd-cmd-params-cm
        namespace: "{{ argocd_namespace }}"
      ignore_errors: true
      tags: [argocd, configmap]

    # 👤 ServiceAccounts
    - name: ❌ Eliminar ServiceAccount de ArgoCD
      kubernetes.core.k8s:
        state: absent
        kind: ServiceAccount
        api_version: v1
        name: argocd-server
        namespace: "{{ argocd_namespace }}"
      ignore_errors: true
      tags: [argocd, serviceaccount]

    # 🔐 RBAC (global)
    - name: ❌ Eliminar ClusterRoleBinding de ArgoCD
      kubernetes.core.k8s:
        state: absent
        kind: ClusterRoleBinding
        api_version: rbac.authorization.k8s.io/v1
        name: argocd-server
      ignore_errors: true
      tags: [argocd, rbac]

    # 📛 CRDs (impiden reinstalación con Helm si existen sin ownership)
    - name: ❌ Eliminar CRDs de ArgoCD
      command: >
        {{ kubectl_path }} --kubeconfig {{ kubeconfig_path }}
        delete crd applications.argoproj.io applicationsets.argoproj.io
        appprojects.argoproj.io argocdextensions.argoproj.io
      ignore_errors: true
      changed_when: true
      tags: [argocd, crd]

    # 🧹 Namespace completo
    - name: 🧹 Eliminar namespace completo de ArgoCD
      kubernetes.core.k8s:
        name: "{{ argocd_namespace }}"
        api_version: v1
        kind: Namespace
        state: absent
      tags: [argocd, namespace]