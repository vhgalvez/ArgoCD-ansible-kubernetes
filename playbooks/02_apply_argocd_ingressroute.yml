# playbooks/02_apply_argocd_ingressroute.yml
# 🌐 Aplicar Middleware + IngressRoute protegida para ArgoCD con Traefik
---
- name: 🌐 Aplicar IngressRoute interna protegida para ArgoCD (Traefik CRD)
  hosts: localhost
  gather_facts: false
  become: false

  vars_files:
    - ../vars/main.yml

  vars:
    mw_template: "../templates/argocd/argocd-dashboard-middleware.yaml.j2"
    ir_template: "../templates/argocd/argocd-dashboard-ingressroute-internal.yaml.j2"
    mw_manifest: "{{ playbook_dir }}/files/argocd-dashboard-middleware.yaml"
    ir_manifest: "{{ playbook_dir }}/files/argocd-dashboard-ingressroute.yaml"

  tasks:

    # ➊ ───────────────── Middleware ─────────────────────────────────────────
    - name: 📄 Renderizar plantilla del Middleware (basic-auth)
      template:
        src: "{{ mw_template }}"
        dest: "{{ mw_manifest }}"

    - name: 🚀 Aplicar Middleware al clúster
      command: >
        {{ kubectl_path }} --kubeconfig {{ kubeconfig_path }} apply -f {{ mw_manifest }}
      register: mw_result
      changed_when: "'created' in mw_result.stdout or 'configured' in mw_result.stdout"
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    # ➋ ───────────────── IngressRoute ───────────────────────────────────────
    - name: 📄 Renderizar plantilla del IngressRoute
      template:
        src: "{{ ir_template }}"
        dest: "{{ ir_manifest }}"

    - name: 🚀 Aplicar IngressRoute al clúster
      command: >
        {{ kubectl_path }} --kubeconfig {{ kubeconfig_path }} apply -f {{ ir_manifest }}
      register: ir_result
      changed_when: "'created' in ir_result.stdout or 'configured' in ir_result.stdout"
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    # ➌ ───────────────── Limpieza ───────────────────────────────────────────
    - name: 🧹 Borrar manifiestos temporales
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ mw_manifest }}"
        - "{{ ir_manifest }}"