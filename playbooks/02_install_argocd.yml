# playbooks/02_install_argocd.yml
# 🌐 Middleware + IngressRoute para ArgoCD (SOLO auth)
---
- name: 🌐 Aplicar IngressRoute protegida para ArgoCD (Traefik CRD)
  hosts: localhost
  gather_facts: false
  become: false

  vars_files:
    - ../vars/main.yml

  vars:
    mw_auth_template: "../templates/argocd/argocd-dashboard-middleware-auth.yaml.j2"
    ir_template: "../templates/argocd/argocd-dashboard-ingressroute-internal.yaml.j2"

    mw_auth_manifest: "{{ playbook_dir }}/files/argocd-dashboard-middleware-auth.yaml"
    ir_manifest: "{{ playbook_dir }}/files/argocd-dashboard-ingressroute.yaml"

  tasks:

    # Esperar a que el Deployment esté listo
    - name: ⏳ Esperar que argocd-server esté disponible
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        name: argocd-server
        namespace: "{{ argocd_namespace }}"
        kubeconfig: "{{ kubeconfig_path }}"
      register: deploy_info
      until: >
        deploy_info.resources
        and deploy_info.resources[0].status.availableReplicas is defined
        and deploy_info.resources[0].status.availableReplicas | int > 0
      retries: 30
      delay: 10

    # Render y aplicación del ÚNICO Middleware (auth)
    - name: 📄 Renderizar middleware auth
      template:
        src: "{{ mw_auth_template }}"
        dest: "{{ mw_auth_manifest }}"

    - name: 🚀 Aplicar middleware auth
      command: >
        {{ kubectl_path }} --kubeconfig {{ kubeconfig_path }} apply -f {{ mw_auth_manifest }}
      register: mw_auth_result
      changed_when: "'created' in mw_auth_result.stdout or 'configured' in mw_auth_result.stdout"

    # Render y aplicación del IngressRoute
    - name: 📄 Renderizar IngressRoute
      template:
        src: "{{ ir_template }}"
        dest: "{{ ir_manifest }}"

    - name: 🚀 Aplicar IngressRoute
      command: >
        {{ kubectl_path }} --kubeconfig {{ kubeconfig_path }} apply -f {{ ir_manifest }}
      register: ir_result
      changed_when: "'created' in ir_result.stdout or 'configured' in ir_result.stdout"

    # Limpieza
    - name: 🧹 Borrar temporales
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ mw_auth_manifest }}"
        - "{{ ir_manifest }}"