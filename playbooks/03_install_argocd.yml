# playbooks/03_install_argocd.yml
# 🚀 Instalar ArgoCD con contraseña personalizada desde .env (vía vars/main.yml)
---
- name: 🚀 Instalar ArgoCD con contraseña personalizada
  hosts: localhost
  gather_facts: false
  become: false

  vars_files:
    - ../vars/main.yml

  tasks:
    - name: 🔐 Codificar contraseña admin en base64
      set_fact:
        argocd_admin_password_b64: "{{ argocd_auth_pass | b64encode }}"

    - name: 📦 Crear namespace para ArgoCD
      kubernetes.core.k8s:
        api_version: v1
        kind: Namespace
        name: "{{ argocd_namespace }}"
        state: present
        kubeconfig: "{{ kubeconfig_path }}"

    - name: 🔑 Secret con contraseña de administrador
      kubernetes.core.k8s:
        state: present
        namespace: "{{ argocd_namespace }}"
        kubeconfig: "{{ kubeconfig_path }}"
        force: true
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: argocd-secret
            labels:
              app.kubernetes.io/name: argocd-secret
              app.kubernetes.io/part-of: argocd
          type: Opaque
          data:
            admin.password: "{{ argocd_admin_password_b64 }}"
            admin.passwordMtime: "{{ lookup('pipe', 'date +%FT%TZ') | b64encode }}"

    - name: 📄 Instalar / actualizar todos los CRDs de Traefik (bundle oficial v3.x)
      kubernetes.core.k8s:
        state: present
        src: https://raw.githubusercontent.com/traefik/traefik/v3.4/docs/content/reference/dynamic-configuration/kubernetes-crd-definition-v1.yml
        kubeconfig: "{{ kubeconfig_path }}"
      register: traefik_crds_result
      retries: 3
      delay: 5
      until: traefik_crds_result is succeeded

    - name: 📥 Aplicar manifiestos oficiales de ArgoCD
      kubernetes.core.k8s:
        state: present
        namespace: "{{ argocd_namespace }}"
        src: https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
        kubeconfig: "{{ kubeconfig_path }}"